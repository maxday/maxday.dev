<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Maxime David (maxday)</title><link>https://maxday.dev/posts/</link><description>Recent content in Posts on Maxime David (maxday)</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 22 Nov 2022 00:00:00 +0800</lastBuildDate><atom:link href="https://maxday.dev/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>How to test println!</title><link>https://maxday.dev/posts/2022-11-22-how-to-test-println-in-rust/</link><pubDate>Tue, 22 Nov 2022 00:00:00 +0800</pubDate><guid>https://maxday.dev/posts/2022-11-22-how-to-test-println-in-rust/</guid><description>Let&amp;rsquo;s say we want to test that a function is correctly outputting something.
Our function may looks like this simple example: print n times the name given in parameter.
fn greeting(nb: i32, name: &amp;amp;str) { for _ in 0..nb { println!(&amp;#34;hi {}&amp;#34;, name); } } How to test it? ðŸ¤” It looks hard.
One easy way is to refactor our code using a Trait. You can see Traits as interfaces.</description></item></channel></rss>