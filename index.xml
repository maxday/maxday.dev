<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Maxime David (maxday)</title><link>https://maxday.dev/</link><description>Recent content on Maxime David (maxday)</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 25 Aug 2022 21:30:04 +0800</lastBuildDate><atom:link href="https://maxday.dev/index.xml" rel="self" type="application/rss+xml"/><item><title>Day06 | Advent of Rust | Crates</title><link>https://maxday.dev/videos/2023-12-06-advent-of-rust-day-06/</link><pubDate>Wed, 06 Dec 2023 00:00:00 +0800</pubDate><guid>https://maxday.dev/videos/2023-12-06-advent-of-rust-day-06/</guid><description>Video</description></item><item><title>Day05 | Advent of Rust | Unit testing</title><link>https://maxday.dev/videos/2023-12-05-advent-of-rust-day-05/</link><pubDate>Tue, 05 Dec 2023 00:00:00 +0800</pubDate><guid>https://maxday.dev/videos/2023-12-05-advent-of-rust-day-05/</guid><description>Video</description></item><item><title>Day04 | Advent of Rust | Result type</title><link>https://maxday.dev/videos/2023-12-04-advent-of-rust-day-04/</link><pubDate>Mon, 04 Dec 2023 00:00:00 +0800</pubDate><guid>https://maxday.dev/videos/2023-12-04-advent-of-rust-day-04/</guid><description>Video</description></item><item><title>Day03 | Advent of Rust | Struct and functions</title><link>https://maxday.dev/videos/2023-12-03-advent-of-rust-day-03/</link><pubDate>Sun, 03 Dec 2023 00:00:00 +0800</pubDate><guid>https://maxday.dev/videos/2023-12-03-advent-of-rust-day-03/</guid><description>Video</description></item><item><title>Day02 | Advent of Rust | Cargo commands</title><link>https://maxday.dev/videos/2023-12-02-advent-of-rust-day-02/</link><pubDate>Sat, 02 Dec 2023 00:00:00 +0800</pubDate><guid>https://maxday.dev/videos/2023-12-02-advent-of-rust-day-02/</guid><description>Video</description></item><item><title>Day01 | Advent of Rust | Installation</title><link>https://maxday.dev/videos/2023-12-01-advent-of-rust-day-01/</link><pubDate>Fri, 01 Dec 2023 00:00:00 +0800</pubDate><guid>https://maxday.dev/videos/2023-12-01-advent-of-rust-day-01/</guid><description>Video</description></item><item><title>Benchmarking AWS Lambda cold starts</title><link>https://maxday.dev/talks/2023-11-29-benchmarking-aws-lambda-cold-starts/</link><pubDate>Wed, 29 Nov 2023 00:00:00 +0800</pubDate><guid>https://maxday.dev/talks/2023-11-29-benchmarking-aws-lambda-cold-starts/</guid><description>Abstract: Did you know that cold start duration is directly tied to the runtime that your AWS Lambda function is running on? You‚Äôve probably seen some blog posts on cold start benchmarking, but they may already be out of date.
Join this dev chat for a deep dive on how to build an open-source and always up-to-date cold start benchmark. Get ready for an ‚ÄúInception‚Äù-like experience, as the solution uses Lambda to benchmark Lambda.</description></item><item><title>Introduction to distributed tracing</title><link>https://maxday.dev/talks/2023-11-16-introduction-to-distributed-tracing/</link><pubDate>Thu, 16 Nov 2023 00:00:00 +0800</pubDate><guid>https://maxday.dev/talks/2023-11-16-introduction-to-distributed-tracing/</guid><description>Abstract: Get ready for an immersive experience, with fewer slides and more live demos!
What is distributed tracing? How to implement it with OpenTelemetry? Do you really need it for your applications? After an ultra-condensed introduction to key concepts, we will dive into live demos about distributed tracing in a Rust&amp;amp;Go stack!
slides | pdf
üì∏ CNCF Quebec</description></item><item><title>Rust on AWS App Runner - Part 2</title><link>https://maxday.dev/posts/2023-09-04-rust-on-aws-app-runner-2/</link><pubDate>Mon, 04 Sep 2023 00:00:00 +0800</pubDate><guid>https://maxday.dev/posts/2023-09-04-rust-on-aws-app-runner-2/</guid><description>Hey hey hey üçï!
This is the second part of this series, make sure you&amp;rsquo;ve already read the first part :)
In the first part, we saw how to create a basic Rust API with a GET /pizza endpoint to retrieve the list of pizza.
In this part, let&amp;rsquo;s see how to containerize our app!
Let&amp;rsquo;s create our container Since AWS App Runner is a fully managed container application service, we definitely need a container!</description></item><item><title>Rust Live Coding | Build a dictionary</title><link>https://maxday.dev/videos/2023-09-03-rust-live-coding-build-a-dictionary/</link><pubDate>Sun, 03 Sep 2023 00:00:00 +0800</pubDate><guid>https://maxday.dev/videos/2023-09-03-rust-live-coding-build-a-dictionary/</guid><description>Video</description></item><item><title>Rust on AWS App Runner - Part 1</title><link>https://maxday.dev/posts/2023-08-21-rust-on-aws-app-runner/</link><pubDate>Mon, 21 Aug 2023 00:00:00 +0800</pubDate><guid>https://maxday.dev/posts/2023-08-21-rust-on-aws-app-runner/</guid><description>Hey hey hey üçï!
Over the past few months, I&amp;rsquo;ve been advocating for Rust on AWS Lambda a lot!
Here is a quick recap in case you missed it!
Live coding a AWS Lambda in Rust with TDD Lambda-Perf tool where Rust is killing the cold start game By the way, we&amp;rsquo;re almost at 256 ‚≠êÔ∏è which is ü§Ø for a side project! I&amp;rsquo;m sure we can do it!
Rust Linz Meetup where I gave a talk about Serverless + Rust But as you may know, serverless is NOT only about AWS Lambda.</description></item><item><title>How I Discovered That the AWS Lambda Runtime Might Be Written in Go</title><link>https://maxday.dev/posts/2023-08-02-lambda-runtime-api-is-written-in-go/</link><pubDate>Wed, 02 Aug 2023 00:00:00 +0800</pubDate><guid>https://maxday.dev/posts/2023-08-02-lambda-runtime-api-is-written-in-go/</guid><description>Have you ever wondered how your Lambda function code is triggered?
Each runtime has to conform to the AWS Lambda runtime API.
In managed runtimes, you don&amp;rsquo;t need to take care of that; that&amp;rsquo;s the whole point of using a managed runtime! AWS takes care of that for you.
But how?
It&amp;rsquo;s hard to say because it&amp;rsquo;s not clearly documented. However, while I was conducting some unrelated experiments, I made a very cool discovery!</description></item><item><title>Rust + Serverless = ‚ù§Ô∏è</title><link>https://maxday.dev/talks/2023-07-31-serverless-and-rust/</link><pubDate>Mon, 31 Jul 2023 00:00:00 +0800</pubDate><guid>https://maxday.dev/talks/2023-07-31-serverless-and-rust/</guid><description>Abstract: Discover the unbeatable synergy of Rust with serverless components such as AWS Lambda or GCP Cloud Run.
Why Rust is the perfect match for serverless architecture?
Uncover the unique features of Rust that make it the top choice for building ultra-efficient and robust serverless apps.
Don&amp;rsquo;t miss this chance to revolutionize your cloud development game and enjoy a 100% serverless pizza tracker demo! üçï
pdf</description></item><item><title>Benchmarking Lambda cold starts</title><link>https://maxday.dev/talks/2023-07-04-benchmarking-lambda-cold-starts/</link><pubDate>Tue, 04 Jul 2023 00:00:00 +0800</pubDate><guid>https://maxday.dev/talks/2023-07-04-benchmarking-lambda-cold-starts/</guid><description>Abstract: Want to understand and minimize Lambda coldstarts?
Maxime David, Serverless Software Engineer at Datadog and AWS Community Builder, joins Julian Wood to go deep into cold start benchmarks.
You may have read blog posts about coldstart benchmarks but unfortunately those are likely to be outdated. See how Maxime created a project to gather Lambda coldstarts across all runtimes.
The report runs daily and compares and visualizes coldstart performance. You can see how Lambda optimizes cold starts over time.</description></item><item><title>Inception! Use serverless to build a Lambda coldstart benchmark across all runtimes</title><link>https://maxday.dev/talks/2023-06-22-inception-use-serverless-to-benchmark-serverless/</link><pubDate>Thu, 22 Jun 2023 00:00:00 +0800</pubDate><guid>https://maxday.dev/talks/2023-06-22-inception-use-serverless-to-benchmark-serverless/</guid><description>Abstract: &amp;ldquo;I don&amp;rsquo;t use AWS Lambda because it&amp;rsquo;s hard to test&amp;rdquo; &amp;ldquo;I&amp;rsquo;m mocking DynamoDB so it&amp;rsquo;s not a real test&amp;rdquo; &amp;ldquo;The feedback loop is terrible, the developer experience is awful&amp;rdquo; Well well well, that&amp;rsquo;s not true!
In this presentation, we will address those common beliefs by providing production ready examples: we build a Pizza api with Lambda and DynamoDB.
üì∏ Matt Carey
pdf</description></item><item><title>Serverless testing is NOT hard</title><link>https://maxday.dev/talks/2023-05-31-serverless-testing-is-not-hard/</link><pubDate>Wed, 31 May 2023 00:00:00 +0800</pubDate><guid>https://maxday.dev/talks/2023-05-31-serverless-testing-is-not-hard/</guid><description>Abstract: &amp;ldquo;I don&amp;rsquo;t use AWS Lambda because it&amp;rsquo;s hard to test&amp;rdquo; &amp;ldquo;I&amp;rsquo;m mocking DynamoDB so it&amp;rsquo;s not a real test&amp;rdquo; &amp;ldquo;The feedback loop is terrible, the developer experience is awful&amp;rdquo; Well well well, that&amp;rsquo;s not true!
In this presentation, we will address those common beliefs by providing production ready examples: we build a Pizza api with Lambda and DynamoDB.
üì∏ Devoxx Poland flickr link
pdf</description></item><item><title>Benchmarking Rust for Serverless</title><link>https://maxday.dev/posts/2023-04-13-benchmarking-rust-for-serverless/</link><pubDate>Thu, 13 Apr 2023 00:00:00 +0800</pubDate><guid>https://maxday.dev/posts/2023-04-13-benchmarking-rust-for-serverless/</guid><description>Let&amp;rsquo;s start with two very important questions:
Why should I care to benchmark Rust since it&amp;rsquo;s already super fast? That&amp;rsquo;s the question we&amp;rsquo;ll try to answer in this post!
Will there be a üçï demo? Of course, you know that I&amp;rsquo;m a true üçïüçïüçï lover!
What&amp;rsquo;s so special about Serverless? Benchmarking is not specific to serverless. But in serverless components, such as AWS Lambda functions, performance really matters for two main reasons:</description></item><item><title>OpenTelemetry, buzz-word or real need?</title><link>https://maxday.dev/talks/2023-03-22-opentelemetry/</link><pubDate>Wed, 01 Mar 2023 00:00:00 +0800</pubDate><guid>https://maxday.dev/talks/2023-03-22-opentelemetry/</guid><description>Abstract: What is OpenTelemetry? Why do you need it? How to implement it?
After defining some of the core concepts of observability, we will see why OpenTelemetry could be a key component of your applications. This talk will be punctuated by live demos to showcase how to implement OpenTelemetry in two different runtimes, spoiler alert: one of them is Rust :)
üì∏ David Avenante
link to the talk | pdf</description></item><item><title>Rust for AWS Lambda</title><link>https://maxday.dev/talks/2023-03-01-rust-for-aws-lambda/</link><pubDate>Wed, 01 Mar 2023 00:00:00 +0800</pubDate><guid>https://maxday.dev/talks/2023-03-01-rust-for-aws-lambda/</guid><description>Link to Youtube Video
Abstract Guest lecture on Rust for AWS Lambda
Agenda :
Intro Serverless definitions AWS Lambda Demo Cold Start Beyond Hello World Non-clean implementation Clean code Tests CI/CD Questions link to the talk | pdf</description></item><item><title>Serverless is NOT hard to test</title><link>https://maxday.dev/talks/2023-02-23-serverless-is-not-hard-to-test/</link><pubDate>Thu, 23 Feb 2023 00:00:00 +0800</pubDate><guid>https://maxday.dev/talks/2023-02-23-serverless-is-not-hard-to-test/</guid><description>Abstract: &amp;ldquo;I don&amp;rsquo;t use AWS Lambda because it&amp;rsquo;s hard to test&amp;rdquo; &amp;ldquo;I&amp;rsquo;m mocking S3 so it&amp;rsquo;s not a real test&amp;rdquo; &amp;ldquo;The feedback loop is terrible, the developer experience is awful&amp;rdquo; Well well well, that&amp;rsquo;s not true!
In this presentation, we will address those common beliefs by providing production ready examples.
üì∏ Xavier Bouclet
link to the talk | pdf</description></item><item><title>Rust for AWS Lambda</title><link>https://maxday.dev/videos/2023-02-03-rust-for-aws-lambda/</link><pubDate>Fri, 03 Feb 2023 00:00:00 +0800</pubDate><guid>https://maxday.dev/videos/2023-02-03-rust-for-aws-lambda/</guid><description>Video</description></item><item><title>How to test println!</title><link>https://maxday.dev/posts/2022-11-22-how-to-test-println-in-rust/</link><pubDate>Tue, 22 Nov 2022 00:00:00 +0800</pubDate><guid>https://maxday.dev/posts/2022-11-22-how-to-test-println-in-rust/</guid><description>Let&amp;rsquo;s say we want to test that a function is correctly outputting something.
Our function may looks like this simple example: print n times the name given in parameter.
fn greeting(nb: i32, name: &amp;amp;str) { for _ in 0..nb { println!(&amp;#34;hi {}&amp;#34;, name); } } How to test it? ü§î It looks hard.
One easy way is to refactor our code using a Trait. You can see Traits as interfaces.</description></item><item><title>TDD Live coding - Rust on AWS Lambda</title><link>https://maxday.dev/videos/2022-10-31-tdd-live-coding-rust-on-lambda/</link><pubDate>Mon, 31 Oct 2022 00:00:00 +0800</pubDate><guid>https://maxday.dev/videos/2022-10-31-tdd-live-coding-rust-on-lambda/</guid><description>Video</description></item><item><title>Building and Monitoring a Serverless App on AWS</title><link>https://maxday.dev/talks/2022-10-19-building-and-monitoring-a-serverless-app-on-aws/</link><pubDate>Tue, 18 Oct 2022 00:00:00 +0800</pubDate><guid>https://maxday.dev/talks/2022-10-19-building-and-monitoring-a-serverless-app-on-aws/</guid><description>Abstract: In this workshop, you‚Äôll learn how to use Datadog to trace through popular AWS managed services like API Gateway, SNS, and SQS‚Äîand how you can use these insights to successfully operate your serverless services at scale. You‚Äôll see this firsthand by designing, deploying, and monitoring a fully serverless GitHub bot.
Co-authored with AJ Stuyvenberg.
üì∏ Jordan Gonz√°lez
Link to the workshop | pdf</description></item><item><title>Build a Real-time Pizza Tracker with Serverless</title><link>https://maxday.dev/talks/2022-02-24-build-a-real-time-pizza-tracker-with-serverless/</link><pubDate>Thu, 24 Feb 2022 00:00:00 +0800</pubDate><guid>https://maxday.dev/talks/2022-02-24-build-a-real-time-pizza-tracker-with-serverless/</guid><description>Abstract: How Serverless technologies can be used to build a real-time pizza tracker?
In this talk we will dive into serverless-applied design-patterns with a live-demo session to answer the following question :
why and how a serverless architecture can be a great fit for realtime and highly scalable use cases?
link to the talk | pdf</description></item><item><title>How to test your awesome iOS app</title><link>https://maxday.dev/talks/2016-11-08-how-to-test-your-awesome-ios-app/</link><pubDate>Tue, 08 Nov 2016 00:00:00 +0800</pubDate><guid>https://maxday.dev/talks/2016-11-08-how-to-test-your-awesome-ios-app/</guid><description>Link to Youtube Video
Abstract XCode provides developers with two kinds of test : unit tests and UI tests. This live coding session will introduce both of these concepts.
Schedule :
Why should I test my mobile app ? Live coding : synchronous and asynchronous tests Live coding : UI tests Code coverage Everything shown in the session is available on Github, no more excuses to skip the tests :)</description></item><item><title>Grunt power: developing and releasing your web app has never been so easy</title><link>https://maxday.dev/talks/2015-11-16-grunt-power-developping-and-releasing-your-web-app-has-never-been-so-easy/</link><pubDate>Mon, 16 Nov 2015 00:00:00 +0800</pubDate><guid>https://maxday.dev/talks/2015-11-16-grunt-power-developping-and-releasing-your-web-app-has-never-been-so-easy/</guid><description>Abstract Grunt is a very (very) powerful tool to automate your JavaScript webapp development and release tasks. During a step by step live demo, I will present how to use this tool and why this is a must have in every front-end developers toolbox.
During live demos, we will see how to use Grunt to :
start a local server to run your application watch for code or style modifications (live reload) compile SASS/LESS files to regular CSS concatenate and minify JavaScript files check for JavaScript errors against our pre-defined standard (thanks to JSHint) add copyright headers to files run unit tests and end-to-end tests deploy the app to your integration servers link to the talk | pdf</description></item></channel></rss>